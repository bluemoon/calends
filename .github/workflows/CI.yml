name: CI

env:
  CARGO_TERM_COLOR: always
  MSRV: '1.60'

on:
  push:
    branches:
    - main
  pull_request: {}

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pwd:
          - .
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: beta
        override: true
        profile: minimal
        components: clippy, rustfmt
    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.pwd }}
        workspaces: ${{ matrix.pwd }}
    - name: Check
      working-directory: ${{ matrix.pwd }}
      run: |
        cargo clippy --all --all-targets --all-features
    - name: rustfmt
      working-directory: ${{ matrix.pwd }}
      run: |
        cargo fmt --all -- --check

  test-docs:
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
    - uses: Swatinem/rust-cache@v1
    - name: Run doc tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --doc

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      run: rustup toolchain install stable --component llvm-tools-preview
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - uses: Swatinem/rust-cache@v2
      with:
        key: coverage
        workspaces: coverage
    - name: Generate code coverage
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: lcov.info
        fail_ci_if_error: true

  dependencies-are-sorted:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pwd:
          - .
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: beta
        override: true
        profile: minimal
    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.pwd }}
        workspaces: ${{ matrix.pwd }}
    - name: Install cargo-sort
      run: |
        cargo install cargo-sort
    - name: Remove non-crate folder
      run: rm -rf async-graphql || true
      working-directory: ${{ matrix.pwd }}
    - name: Check dependency tables
      working-directory: ${{ matrix.pwd }}
      run: |
        cargo sort --workspace --grouped --check
